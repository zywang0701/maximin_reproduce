package_version('glmnet')
library(MASS)
library(CVXR)
library(glmnet)
library(intervals)
package_version('glmnet')
packageVersion('glmnet')
packageVersion('CVXR')
packageVersion('intervals')
packageVersion('MASS')
devtools::build_readme()
## read data
geno.data<- read.table("data/TransData.txt", header = TRUE)
ind.data<- read.table("data/ReduceInd.txt", header = FALSE)
ind.vector<-as.matrix(ind.data)
geno_red<-geno.data[,ind.vector] ## geno_red is the covariates dataset we study
pheno.data<-read.table("original_data/BYxRM_PhenoData.txt",header=TRUE)
pheno<-as.matrix(pheno.data)  ## pheno is the outcome dataset we study
### filtering-1 ###
freq = colSums(geno_red==1) / (2 * nrow(geno_red))
pheno.data<-read.table("data/BYxRM_PhenoData.txt",header=TRUE)
pheno<-as.matrix(pheno.data)  ## pheno is the outcome dataset we study
### filtering-1 ###
freq = colSums(geno_red==1) / (2 * nrow(geno_red))
## remove snps with absolute correlation above 0.5
cor_thres = 0.85
cor_mat = cor(geno_red)
indx_keep = c(3611, 3638, 652) # these three signals based on our previous analysis
for(j in 1:ncol(cor_mat)){
if((!(j%in%indx_keep))& (max(abs(cor_mat[j, indx_keep])) < cor_thres)){
indx_keep = c(indx_keep, j)
}
}
indx_keep = sort(indx_keep)
snp_data = geno_red[,indx_keep] # 1008*513
snp_data = scale(snp_data, center=T, scale = T)
pheno = scale(pheno, center = T, scale = T)
## we are interested in four medias ##
# media
pheno.set = c(11,19,36,38)
colnames(pheno.set)
colnames(pheno)
colnames(pheno)[pheno.set]
## we are interested in four medias ##
# media 11: Ethanol; media 19: Lactose; media 36: 5-Fluorouracil; media 38: Xylose
pheno.set = c(11,19,36,38)
## obtain initial estimators for regression coefficients
Coefs.est = matrix(0, nrow=ncol(snp_data), ncol=length(pheno.set))
for(l in 1:length(pheno.set)){
na.set = as.vector(is.na(pheno[,l]))
X = as.matrix(snp_data[!na.set, ])
y = as.vector(pheno[!na.set, l])
out = cv.glmnet(X, y, intercept=F, standardize=T)
Coefs.est[, l] = as.vector(coef(out, s="lambda.min"))[-1]
}
library(glmnet)
for(l in 1:length(pheno.set)){
na.set = as.vector(is.na(pheno[,l]))
X = as.matrix(snp_data[!na.set, ])
y = as.vector(pheno[!na.set, l])
out = cv.glmnet(X, y, intercept=F, standardize=T)
Coefs.est[, l] = as.vector(coef(out, s="lambda.min"))[-1]
}
library(SIHR)
colnames(pheno)
##### bot-subfigure #####
source('../source/MaximinInference')
##### bot-subfigure #####
source('./source/MaximinInference')
##### bot-subfigure #####
source('../source/MaximinInference')
##### bot-subfigure #####
source('.//source/MaximinInference')
##### bot-subfigure #####
source('./source/MaximinInference.R')
##### bot-subfigure #####
source('../source/MaximinInference.R')
colnames(pheno)[c(18, 29, 31, 37, 39, 42, 45)]
setwd("~/github/maximin_reproduce/code/Irregular-Settings")
rm(list=ls())
source("../../source/gendata.R")
